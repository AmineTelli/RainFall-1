$> scp -P 4242 level0@<ip>:~/level0 .
$> chmod 755 level0

$> r2 level0
r2> aa
r2> pdf @sym.main
/ (fcn) main 199
|   main (int argc, char **argv, char **envp);
|           ; arg int arg_ch @ ebp+0xc
|           ; var int local_4h @ esp+0x4
|           ; var int local_8h @ esp+0x8
|           ; var int local_ch @ esp+0xc
|           ; var int local_10h @ esp+0x10
|           ; var int local_14h @ esp+0x14
|           ; var int local_18h @ esp+0x18
|           ; var int local_1ch @ esp+0x1c
|           ; DATA XREF from entry0 (0x8048dff)
|           0x08048ec0      55             push ebp
|           0x08048ec1      89e5           mov ebp, esp
|           0x08048ec3      83e4f0         and esp, 0xfffffff0
|           0x08048ec6      83ec20         sub esp, 0x20
|           0x08048ec9      8b450c         mov eax, dword [arg_ch]     ; sym._nl_current_LC_NUMERIC ; [0xc:4]=-1
|           0x08048ecc      83c004         add eax, 4
|           0x08048ecf      8b00           mov eax, dword [eax]
|           0x08048ed1      890424         mov dword [esp], eax
|           0x08048ed4      e837080000     call sym.atoi               ; int atoi(const char *str)
|           0x08048ed9      3da7010000     cmp eax, 0x1a7              ; 423
|       ,=< 0x08048ede      7578           jne 0x8048f58
|       |   0x08048ee0      c7042448530c.  mov dword [esp], str.bin_sh ; [0x80c5348:4]=0x6e69622f ; "/bin/sh"
|       |   0x08048ee7      e8047d0000     call sym.__strdup
|       |   0x08048eec      89442410       mov dword [local_10h], eax
|       |   0x08048ef0      c74424140000.  mov dword [local_14h], 0
|       |   0x08048ef8      e883b70000     call sym.getegid
|       |   0x08048efd      8944241c       mov dword [local_1ch], eax
|       |   0x08048f01      e86ab70000     call sym.geteuid            ; uid_t geteuid(void)
|       |   0x08048f06      89442418       mov dword [local_18h], eax
|       |   0x08048f0a      8b44241c       mov eax, dword [local_1ch]  ; sym.__libc_tsd_CTYPE_TOLOWER ; [0x1c:4]=-1
|       |   0x08048f0e      89442408       mov dword [local_8h], eax
|       |   0x08048f12      8b44241c       mov eax, dword [local_1ch]  ; sym.__libc_tsd_CTYPE_TOLOWER ; [0x1c:4]=-1
|       |   0x08048f16      89442404       mov dword [local_4h], eax
|       |   0x08048f1a      8b44241c       mov eax, dword [local_1ch]  ; sym.__libc_tsd_CTYPE_TOLOWER ; [0x1c:4]=-1
|       |   0x08048f1e      890424         mov dword [esp], eax
|       |   0x08048f21      e8dab70000     call sym.__setresgid
|       |   0x08048f26      8b442418       mov eax, dword [local_18h]  ; sym.__libc_tsd_CTYPE_TOUPPER ; [0x18:4]=-1
|       |   0x08048f2a      89442408       mov dword [local_8h], eax
|       |   0x08048f2e      8b442418       mov eax, dword [local_18h]  ; sym.__libc_tsd_CTYPE_TOUPPER ; [0x18:4]=-1
|       |   0x08048f32      89442404       mov dword [local_4h], eax
|       |   0x08048f36      8b442418       mov eax, dword [local_18h]  ; sym.__libc_tsd_CTYPE_TOUPPER ; [0x18:4]=-1
|       |   0x08048f3a      890424         mov dword [esp], eax
|       |   0x08048f3d      e84eb70000     call sym.setresuid
|       |   0x08048f42      8d442410       lea eax, dword [local_10h]  ; sym.__libc_errno ; 0x10
|       |   0x08048f46      89442404       mov dword [local_4h], eax
|       |   0x08048f4a      c7042448530c.  mov dword [esp], str.bin_sh ; [0x80c5348:4]=0x6e69622f ; "/bin/sh"
|       |   0x08048f51      e8eab60000     call sym.execv
|      ,==< 0x08048f56      eb28           jmp 0x8048f80
|      |`-> 0x08048f58      a170e10e08     mov eax, dword obj.stderr   ; obj._IO_stderr ; [0x80ee170:4]=0x80ee7a0 obj._IO_2_1_stderr
|      |    0x08048f5d      89c2           mov edx, eax
|      |    0x08048f5f      b850530c08     mov eax, str.No             ; 0x80c5350 ; "No !\n"
|      |    0x08048f64      8954240c       mov dword [local_ch], edx
|      |    0x08048f68      c74424080500.  mov dword [local_8h], 5
|      |    0x08048f70      c74424040100.  mov dword [local_4h], 1
|      |    0x08048f78      890424         mov dword [esp], eax
|      |    0x08048f7b      e8b0120000     call sym._IO_fwrite
|      |    ; CODE XREF from main (0x8048f56)
|      `--> 0x08048f80      b800000000     mov eax, 0
|           0x08048f85      c9             leave
\           0x08048f86      c3             ret
